# -*- coding: utf-8 -*-
"""IPLScorePrediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rzEJVfJ-1W43U9KDUhJIxB8cPxOe-utW
"""

import pandas as pd
df=pd.read_csv("ipl.csv")
df.head()

df.columns

df['bat_team'].value_counts()

ActiveTeams=['Kolkata Knight Riders', 'Chennai Super Kings', 'Rajasthan Royals',
                    'Mumbai Indians', 'Kings XI Punjab', 'Royal Challengers Bangalore',
                    'Delhi Daredevils', 'Sunrisers Hyderabad']

df=df[(df['bat_team'].isin (ActiveTeams)) & (df['bowl_team'].isin (ActiveTeams))]
df.head()

df['bat_team'].value_counts()

df=pd.get_dummies(df,columns=['bat_team','bowl_team'])
df.head()

df.drop(['striker','non-striker','mid'],axis=1,inplace=True)

df=df[df['overs']>5.0]

df.head()

df.columns

final_df=df[['date', 'bat_team_Chennai Super Kings', 'bat_team_Delhi Daredevils', 'bat_team_Kings XI Punjab',
              'bat_team_Kolkata Knight Riders', 'bat_team_Mumbai Indians', 'bat_team_Rajasthan Royals',
              'bat_team_Royal Challengers Bangalore', 'bat_team_Sunrisers Hyderabad',
              'bowl_team_Chennai Super Kings', 'bowl_team_Delhi Daredevils', 'bowl_team_Kings XI Punjab',
              'bowl_team_Kolkata Knight Riders', 'bowl_team_Mumbai Indians', 'bowl_team_Rajasthan Royals',
              'bowl_team_Royal Challengers Bangalore', 'bowl_team_Sunrisers Hyderabad',
              'overs', 'runs', 'wickets', 'runs_last_5', 'wickets_last_5', 'total']]

final_df.head()

from datetime import datetime
final_df['date']=final_df['date'].apply(lambda x: datetime.strptime(x, '%Y-%m-%d'))

X_train = final_df.drop(labels='total', axis=1)[final_df['date'].dt.year <= 2016]
X_test = final_df.drop(labels='total', axis=1)[final_df['date'].dt.year >= 2017]

y_train = final_df[final_df['date'].dt.year <= 2016]['total'].values
y_test = final_df[final_df['date'].dt.year >= 2017]['total'].values

X_train.drop(labels='date', axis=True, inplace=True)
X_test.drop(labels='date', axis=True, inplace=True)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,y_train)

import pickle
filename = 'IPLScorePrediction.pkl'
pickle.dump(regressor, open(filename, 'wb'))